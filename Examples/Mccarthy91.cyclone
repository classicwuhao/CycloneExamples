
/**
 * McCarthy91 function.
 *		 _
 *		|  n-10,		if n>100
 * M(n)=| 
 *		|_ M(M(n+11)),	if n<=100
 *
 */

option-trace=true;
graph McCarthy91{	
	int n;
	int p=1;

	abstract start node M{}
	
	normal node M1{
		n=n-10;
		p=p-1;
	}

	normal node M2{
		n=n+11;
		p=p+1;
	}
	/* terminating node */
	abstract final node T{}

	edge { M -> M1 where n>100;}
	edge { M -> M2}
	edge { M1 -> M2 where n<=100 && p>=1;}
	edge { M2 -> M1 where n>100 && p>=1;}
	edge { M2 -> M2 }
	edge { M1 -> M1 }  
	edge { M2 -> T where p==0;}
	edge { M1 -> T where p==0;}
	edge { T -> T}

	goal{
		
		assert (initial(n)<=100);
		/* 
		 * Prove n<=100
		 * Find an integer n that is <=100 and n!=91 after applying M(n).
		 */
		assert some (n!=91 && p==0); 
		/* a large scope. */
		check for 200
	}
	
}
